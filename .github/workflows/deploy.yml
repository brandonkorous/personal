name: Build and Deploy to AKS

on:
  push:
    branches:
      - main

env:
  IMAGE_NAME: bk-website

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name == 'main' && 'production' || 'development' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Read SemVer from package.json
        id: semver
        run: |
          VERSION=$(jq -r .version package.json)
          echo "ðŸ”¢ Using version: $VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Install kubelogin (for AAD auth)
        run: |
          curl -sLO https://github.com/Azure/kubelogin/releases/download/v0.0.25/kubelogin-linux-amd64.zip
          unzip kubelogin-linux-amd64.zip -d kubelogin
          sudo mv kubelogin/bin/linux_amd64/kubelogin /usr/local/bin
          kubelogin --version
          rm -rf kubelogin*

      - name: Log in to ACR
        run: |
          az acr login --name ${{ secrets.ACR_NAME }}

      - name: Docker Build and Tag
        run: |
          docker build --no-cache \
            --build-arg FONT_AWESOME_NPM_TOKEN=${{ secrets.FONT_AWESOME_NPM_TOKEN }} \
            -t ${{ secrets.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ steps.semver.outputs.version }} .
          
          docker tag ${{ secrets.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ steps.semver.outputs.version }} \
            ${{ secrets.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:latest

      - name: Docker Push
        run: |
          docker push ${{ secrets.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ steps.semver.outputs.version }}
          docker push ${{ secrets.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:latest

      - name: Set AKS Context
        run: |
          echo "${{ secrets.KUBECONFIG_SECRET }}" > kubeconfig
          export KUBECONFIG=kubeconfig

      - name: Set image version in deployment
        run: |
          kubectl set image deployment/${{ env.IMAGE_NAME }} ${{ env.IMAGE_NAME }}=${{ secrets.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:latest

      - name: Render deployment.yaml with secrets
        run: |
          envsubst < deployment/deployment.yaml > deployment/deployment.final.yaml
        env:
          ACR_NAME: ${{ secrets.ACR_NAME }}

      - name: Deploy to AKS
        run: |
          kubectl apply -f deployment/deployment.final.yaml
          kubectl apply -f deployment/service.yaml
          kubectl apply -f deployment/ingress.yaml
          kubectl rollout status deployment/${{ env.IMAGE_NAME }}
